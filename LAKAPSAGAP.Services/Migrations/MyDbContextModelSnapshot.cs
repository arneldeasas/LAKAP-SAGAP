// <auto-generated />
using System;
using LAKAPSAGAP.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LAKAPSAGAP.Services.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LAKAPSAGAP.Models.Models.Attachment", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AddedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("isArchived")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AddedById");

                    b.HasIndex("LastModifiedById");

                    b.HasIndex("UserId");

                    b.ToTable("Attachment");

                    b.HasData(
                        new
                        {
                            Id = "ATT_001",
                            AddedById = "ACC_001",
                            DateCreated = new DateTime(2024, 11, 20, 4, 54, 54, 224, DateTimeKind.Local).AddTicks(2506),
                            DateUpdated = new DateTime(2024, 11, 20, 4, 54, 54, 224, DateTimeKind.Local).AddTicks(2516),
                            IsDeleted = false,
                            Url = "wwwroot\\attachments\\default_user_image.png",
                            UserId = "ACC_001",
                            isArchived = false
                        });
                });

            modelBuilder.Entity("LAKAPSAGAP.Models.Models.Category", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AddedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isArchived")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AddedById");

                    b.HasIndex("LastModifiedById");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("LAKAPSAGAP.Models.Models.Floor", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AddedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarehouseId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("isArchived")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AddedById");

                    b.HasIndex("LastModifiedById");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Floor");
                });

            modelBuilder.Entity("LAKAPSAGAP.Models.Models.Kit", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AddedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KitType")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isArchived")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AddedById");

                    b.HasIndex("LastModifiedById");

                    b.ToTable("Kit");
                });

            modelBuilder.Entity("LAKAPSAGAP.Models.Models.KitComponent", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AddedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ItemId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("KitId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LastModifiedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<bool>("isArchived")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AddedById");

                    b.HasIndex("ItemId");

                    b.HasIndex("KitId");

                    b.HasIndex("LastModifiedById");

                    b.ToTable("KitComponent");
                });

            modelBuilder.Entity("LAKAPSAGAP.Models.Models.Rack", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AddedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("FloorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isArchived")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AddedById");

                    b.HasIndex("FloorId");

                    b.HasIndex("LastModifiedById");

                    b.ToTable("Rack");
                });

            modelBuilder.Entity("LAKAPSAGAP.Models.Models.ReliefReceived", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AddedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateReceived")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DriverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ReceivedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceivedFrom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReliefType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TruckPlateNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarehouseId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("isArchived")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AddedById");

                    b.HasIndex("LastModifiedById");

                    b.HasIndex("WarehouseId");

                    b.ToTable("ReliefReceived");
                });

            modelBuilder.Entity("LAKAPSAGAP.Models.Models.StockDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AddedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BatchNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateExpiry")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ItemId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LastModifiedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("RackId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("isArchived")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AddedById");

                    b.HasIndex("BatchNumber");

                    b.HasIndex("ItemId");

                    b.HasIndex("LastModifiedById");

                    b.HasIndex("RackId");

                    b.ToTable("StockDetail");
                });

            modelBuilder.Entity("LAKAPSAGAP.Models.Models.StockItem", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AddedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("FloorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UoMId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("isArchived")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AddedById");

                    b.HasIndex("CategoryId");

                    b.HasIndex("FloorId");

                    b.HasIndex("LastModifiedById");

                    b.HasIndex("UoMId");

                    b.ToTable("StockItem");
                });

            modelBuilder.Entity("LAKAPSAGAP.Models.Models.UoM", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AddedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isArchived")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AddedById");

                    b.HasIndex("LastModifiedById");

                    b.ToTable("UoMs");
                });

            modelBuilder.Entity("LAKAPSAGAP.Models.Models.UserAuth", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "870b1e28-ac75-45fa-ba9c-98b816d8c65a",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "10cc5c91-1631-4e9c-9452-ff0eca1e3203",
                            Email = "admin@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1d961fe2-1538-42a1-9968-874de1a352c6",
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        },
                        new
                        {
                            Id = "f66afff6-a815-46fb-ba8c-a6854d75a17a",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "fa48c182-3e7e-46b9-a684-19463b3ad2dc",
                            Email = "head@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f11d4128-28f5-428f-b4a9-d56f916292f6",
                            TwoFactorEnabled = false,
                            UserName = "head"
                        },
                        new
                        {
                            Id = "7f314d1d-80c3-4203-b453-5b46dadb0f85",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4d3eb86f-3129-42fc-a1ce-5827ae95695f",
                            Email = "barangay@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "478e209f-35f3-430e-8d37-90d11046c5f5",
                            TwoFactorEnabled = false,
                            UserName = "barangay"
                        });
                });

            modelBuilder.Entity("LAKAPSAGAP.Models.Models.UserInfo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AddedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Barangay")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserAuthId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("isArchived")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AddedById");

                    b.HasIndex("LastModifiedById");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserAuthId");

                    b.ToTable("UserInfo");

                    b.HasData(
                        new
                        {
                            Id = "ACC_001",
                            AddedById = "ACC_001",
                            Barangay = "Karuhatan",
                            DateCreated = new DateTime(2024, 11, 20, 4, 54, 54, 224, DateTimeKind.Local).AddTicks(2540),
                            DateUpdated = new DateTime(2024, 11, 20, 4, 54, 54, 224, DateTimeKind.Local).AddTicks(2541),
                            Email = "admin@gmail.com",
                            FirstName = "LakapSagap",
                            IsDeleted = false,
                            LastName = "Admin",
                            MiddleName = "Capstone",
                            Phone = "09123456789",
                            RoleId = "ab9388e3-8300-4150-a9fa-490efc6cdd31",
                            UserAuthId = "870b1e28-ac75-45fa-ba9c-98b816d8c65a",
                            isArchived = false
                        });
                });

            modelBuilder.Entity("LAKAPSAGAP.Models.Models.Warehouse", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AddedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isArchived")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AddedById");

                    b.HasIndex("LastModifiedById");

                    b.ToTable("Warehouse");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "ab9388e3-8300-4150-a9fa-490efc6cdd31",
                            Name = "CSWD Administration Staff",
                            NormalizedName = "CSWD_ADMINISTRATION_STAFF"
                        },
                        new
                        {
                            Id = "417c7054-fc01-44ba-a9d1-25b3ff8b47be",
                            Name = "CSWD Office Head",
                            NormalizedName = "CSWD_OFFICE_HEAD"
                        },
                        new
                        {
                            Id = "78b5a045-757e-4d5d-84f9-deeb3a021dac",
                            Name = "Barangay Representative",
                            NormalizedName = "BARANGAY_REPRESENTATIVE"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("LAKAPSAGAP.Models.Models.Attachment", b =>
                {
                    b.HasOne("LAKAPSAGAP.Models.Models.UserInfo", "AddedBy")
                        .WithMany("AddedAttachments")
                        .HasForeignKey("AddedById")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("LAKAPSAGAP.Models.Models.UserInfo", "LastModifiedBy")
                        .WithMany()
                        .HasForeignKey("LastModifiedById");

                    b.HasOne("LAKAPSAGAP.Models.Models.UserInfo", "User")
                        .WithMany("UserAttachments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AddedBy");

                    b.Navigation("LastModifiedBy");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LAKAPSAGAP.Models.Models.Category", b =>
                {
                    b.HasOne("LAKAPSAGAP.Models.Models.UserInfo", "AddedBy")
                        .WithMany("CategoriesCreated")
                        .HasForeignKey("AddedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LAKAPSAGAP.Models.Models.UserInfo", "LastModifiedBy")
                        .WithMany()
                        .HasForeignKey("LastModifiedById");

                    b.Navigation("AddedBy");

                    b.Navigation("LastModifiedBy");
                });

            modelBuilder.Entity("LAKAPSAGAP.Models.Models.Floor", b =>
                {
                    b.HasOne("LAKAPSAGAP.Models.Models.UserInfo", "AddedBy")
                        .WithMany()
                        .HasForeignKey("AddedById");

                    b.HasOne("LAKAPSAGAP.Models.Models.UserInfo", "LastModifiedBy")
                        .WithMany()
                        .HasForeignKey("LastModifiedById");

                    b.HasOne("LAKAPSAGAP.Models.Models.Warehouse", "Warehouse")
                        .WithMany("FloorList")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AddedBy");

                    b.Navigation("LastModifiedBy");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("LAKAPSAGAP.Models.Models.Kit", b =>
                {
                    b.HasOne("LAKAPSAGAP.Models.Models.UserInfo", "AddedBy")
                        .WithMany()
                        .HasForeignKey("AddedById");

                    b.HasOne("LAKAPSAGAP.Models.Models.UserInfo", "LastModifiedBy")
                        .WithMany()
                        .HasForeignKey("LastModifiedById");

                    b.Navigation("AddedBy");

                    b.Navigation("LastModifiedBy");
                });

            modelBuilder.Entity("LAKAPSAGAP.Models.Models.KitComponent", b =>
                {
                    b.HasOne("LAKAPSAGAP.Models.Models.UserInfo", "AddedBy")
                        .WithMany()
                        .HasForeignKey("AddedById");

                    b.HasOne("LAKAPSAGAP.Models.Models.StockItem", "StockItem")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LAKAPSAGAP.Models.Models.Kit", null)
                        .WithMany("KitComponentList")
                        .HasForeignKey("KitId");

                    b.HasOne("LAKAPSAGAP.Models.Models.UserInfo", "LastModifiedBy")
                        .WithMany()
                        .HasForeignKey("LastModifiedById");

                    b.Navigation("AddedBy");

                    b.Navigation("LastModifiedBy");

                    b.Navigation("StockItem");
                });

            modelBuilder.Entity("LAKAPSAGAP.Models.Models.Rack", b =>
                {
                    b.HasOne("LAKAPSAGAP.Models.Models.UserInfo", "AddedBy")
                        .WithMany()
                        .HasForeignKey("AddedById");

                    b.HasOne("LAKAPSAGAP.Models.Models.Floor", "Floor")
                        .WithMany("Racks")
                        .HasForeignKey("FloorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LAKAPSAGAP.Models.Models.UserInfo", "LastModifiedBy")
                        .WithMany()
                        .HasForeignKey("LastModifiedById");

                    b.Navigation("AddedBy");

                    b.Navigation("Floor");

                    b.Navigation("LastModifiedBy");
                });

            modelBuilder.Entity("LAKAPSAGAP.Models.Models.ReliefReceived", b =>
                {
                    b.HasOne("LAKAPSAGAP.Models.Models.UserInfo", "AddedBy")
                        .WithMany()
                        .HasForeignKey("AddedById");

                    b.HasOne("LAKAPSAGAP.Models.Models.UserInfo", "LastModifiedBy")
                        .WithMany()
                        .HasForeignKey("LastModifiedById");

                    b.HasOne("LAKAPSAGAP.Models.Models.Warehouse", "Warehouse")
                        .WithMany("ReliefReceivedList")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AddedBy");

                    b.Navigation("LastModifiedBy");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("LAKAPSAGAP.Models.Models.StockDetail", b =>
                {
                    b.HasOne("LAKAPSAGAP.Models.Models.UserInfo", "AddedBy")
                        .WithMany()
                        .HasForeignKey("AddedById");

                    b.HasOne("LAKAPSAGAP.Models.Models.ReliefReceived", "BatchDetail")
                        .WithMany("StockDetailList")
                        .HasForeignKey("BatchNumber")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LAKAPSAGAP.Models.Models.StockItem", "Item")
                        .WithMany("StockDetailList")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LAKAPSAGAP.Models.Models.UserInfo", "LastModifiedBy")
                        .WithMany()
                        .HasForeignKey("LastModifiedById");

                    b.HasOne("LAKAPSAGAP.Models.Models.Rack", "Rack")
                        .WithMany("StockDetailList")
                        .HasForeignKey("RackId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AddedBy");

                    b.Navigation("BatchDetail");

                    b.Navigation("Item");

                    b.Navigation("LastModifiedBy");

                    b.Navigation("Rack");
                });

            modelBuilder.Entity("LAKAPSAGAP.Models.Models.StockItem", b =>
                {
                    b.HasOne("LAKAPSAGAP.Models.Models.UserInfo", "AddedBy")
                        .WithMany()
                        .HasForeignKey("AddedById");

                    b.HasOne("LAKAPSAGAP.Models.Models.Category", "Category")
                        .WithMany("StockItems")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LAKAPSAGAP.Models.Models.Floor", "Floor")
                        .WithMany("StockItems")
                        .HasForeignKey("FloorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LAKAPSAGAP.Models.Models.UserInfo", "LastModifiedBy")
                        .WithMany()
                        .HasForeignKey("LastModifiedById");

                    b.HasOne("LAKAPSAGAP.Models.Models.UoM", "UoM")
                        .WithMany("StockItems")
                        .HasForeignKey("UoMId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AddedBy");

                    b.Navigation("Category");

                    b.Navigation("Floor");

                    b.Navigation("LastModifiedBy");

                    b.Navigation("UoM");
                });

            modelBuilder.Entity("LAKAPSAGAP.Models.Models.UoM", b =>
                {
                    b.HasOne("LAKAPSAGAP.Models.Models.UserInfo", "AddedBy")
                        .WithMany()
                        .HasForeignKey("AddedById");

                    b.HasOne("LAKAPSAGAP.Models.Models.UserInfo", "LastModifiedBy")
                        .WithMany()
                        .HasForeignKey("LastModifiedById");

                    b.Navigation("AddedBy");

                    b.Navigation("LastModifiedBy");
                });

            modelBuilder.Entity("LAKAPSAGAP.Models.Models.UserInfo", b =>
                {
                    b.HasOne("LAKAPSAGAP.Models.Models.UserInfo", "AddedBy")
                        .WithMany("AddedUsers")
                        .HasForeignKey("AddedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LAKAPSAGAP.Models.Models.UserInfo", "LastModifiedBy")
                        .WithMany("LasModifiedByList")
                        .HasForeignKey("LastModifiedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LAKAPSAGAP.Models.Models.UserAuth", "UserAuth")
                        .WithMany()
                        .HasForeignKey("UserAuthId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AddedBy");

                    b.Navigation("LastModifiedBy");

                    b.Navigation("Role");

                    b.Navigation("UserAuth");
                });

            modelBuilder.Entity("LAKAPSAGAP.Models.Models.Warehouse", b =>
                {
                    b.HasOne("LAKAPSAGAP.Models.Models.UserInfo", "AddedBy")
                        .WithMany()
                        .HasForeignKey("AddedById");

                    b.HasOne("LAKAPSAGAP.Models.Models.UserInfo", "LastModifiedBy")
                        .WithMany()
                        .HasForeignKey("LastModifiedById");

                    b.Navigation("AddedBy");

                    b.Navigation("LastModifiedBy");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("LAKAPSAGAP.Models.Models.UserAuth", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("LAKAPSAGAP.Models.Models.UserAuth", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LAKAPSAGAP.Models.Models.UserAuth", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("LAKAPSAGAP.Models.Models.UserAuth", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LAKAPSAGAP.Models.Models.Category", b =>
                {
                    b.Navigation("StockItems");
                });

            modelBuilder.Entity("LAKAPSAGAP.Models.Models.Floor", b =>
                {
                    b.Navigation("Racks");

                    b.Navigation("StockItems");
                });

            modelBuilder.Entity("LAKAPSAGAP.Models.Models.Kit", b =>
                {
                    b.Navigation("KitComponentList");
                });

            modelBuilder.Entity("LAKAPSAGAP.Models.Models.Rack", b =>
                {
                    b.Navigation("StockDetailList");
                });

            modelBuilder.Entity("LAKAPSAGAP.Models.Models.ReliefReceived", b =>
                {
                    b.Navigation("StockDetailList");
                });

            modelBuilder.Entity("LAKAPSAGAP.Models.Models.StockItem", b =>
                {
                    b.Navigation("StockDetailList");
                });

            modelBuilder.Entity("LAKAPSAGAP.Models.Models.UoM", b =>
                {
                    b.Navigation("StockItems");
                });

            modelBuilder.Entity("LAKAPSAGAP.Models.Models.UserInfo", b =>
                {
                    b.Navigation("AddedAttachments");

                    b.Navigation("AddedUsers");

                    b.Navigation("CategoriesCreated");

                    b.Navigation("LasModifiedByList");

                    b.Navigation("UserAttachments");
                });

            modelBuilder.Entity("LAKAPSAGAP.Models.Models.Warehouse", b =>
                {
                    b.Navigation("FloorList");

                    b.Navigation("ReliefReceivedList");
                });
#pragma warning restore 612, 618
        }
    }
}
