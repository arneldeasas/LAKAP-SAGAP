@using LAKAPSAGAP.Services.Core.Helpers;

<RadzenStack Style="width:50vw" Orientation="Orientation.Vertical" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Start" Gap="1rem">
	<RadzenTemplateForm class="w-100" Context="HeaderForm" Submit="SubmitKit" TItem="KitViewModel" Data="KitVM">
		<RadzenText TextStyle="TextStyle.DisplayH5" Text="@(EditMode ? "Edit Kit" : "Create New Kit")" class="fw-bold rz-color-primary" />

		<RadzenStack class="w-100" Orientation="Orientation.Vertical" AlignItems="AlignItems.Normal" JustifyContent="JustifyContent.Normal" Gap="1rem">
			<RadzenRow>
				<RadzenColumn>
					<RadzenStack Orientation="Orientation.Vertical" AlignItems="AlignItems.Normal" JustifyContent="JustifyContent.Normal" Gap="10px">
						<span class="fw-bold text-uppercase">Kit Name</span>
						@* <RadzenAutoComplete @bind-Value="@Kit.Name" Data="@Kits" TextProperty="@nameof(KitViewModel.Name)" /> *@
						<RadzenTextBox @bind-Value="@KitVM.Name" Name="KitName" />
						<RadzenRequiredValidator Component="KitName" Text="Kit name is required."></RadzenRequiredValidator>
					</RadzenStack>
				</RadzenColumn>
				<RadzenColumn>
					<RadzenStack Orientation="Orientation.Vertical" AlignItems="AlignItems.Normal" JustifyContent="JustifyContent.Normal" Gap="10px">
						<span class="fw-bold text-uppercase">Kit Name</span>
						@* <RadzenAutoComplete @bind-Value="@Kit.Name" Data="@Kits" TextProperty="@nameof(KitViewModel.Name)" /> *@
						<RadzenDropDown @bind-Value="@KitVM.KitType" Name="KitType" TextProperty="Text" ValueProperty="Value" Data="(Enum.GetValues(typeof(KitType)).Cast<KitType>().Select(e => new { Text = EnumHelper.GetEnumDescription(e), Value = e }).ToList())" />
						<RadzenRequiredValidator Component="KitType" Text="Kit type is required."></RadzenRequiredValidator>
					</RadzenStack>
				</RadzenColumn>
			</RadzenRow>
			<RadzenStack Orientation="Orientation.Vertical" AlignItems="AlignItems.Normal" JustifyContent="JustifyContent.Normal" Gap="10px">
				<span class="fw-bold text-uppercase">Kit Components</span>
				@* <RadzenDataGrid @ref="@KitsComponentsDG" Data="@KitsComponentList" TItem="@KitComponentViewModel"
				AllowAlternatingRows="true" AllowPaging="true" PageSize="5" AllowSorting="!IsEditing"
				EditMode="DataGridEditMode.Multiple" Density="Density.Compact" class="rz-border-radius-2"
				RowUpdate="@OnUpdateRow" RowCreate="@OnCreateRow" Sort="@Reset" Page="@Reset" Filter="@Reset">
				<Columns>
				<RadzenDataGridColumn Property="@nameof(KitComponentViewModel.Id)" Title="Id" Width="70px">
				<Template Context="data">
				@(KitsComponentList.IndexOf(data) + 1)
				</Template>
				</RadzenDataGridColumn>
				<RadzenDataGridColumn Property="@nameof(KitComponentViewModel.ItemName)" Title="Item Name" Width="150px">
				<EditTemplate Context="data">


				</EditTemplate>
				</RadzenDataGridColumn>
				<RadzenDataGridColumn Property="@nameof(KitComponentViewModel.Quantity)" Title="Quantity" Width="150px">
				<EditTemplate Context="data">
				<RadzenNumeric @bind-Value="@data.Quantity" Name="Quantity" class="rz-display-block rz-w-100" />
				</EditTemplate>
				</RadzenDataGridColumn>
				<RadzenDataGridColumn Title="Action" Width="100px" TextAlign="TextAlign.Center">
				<Template Context="data">
				<RadzenButton Variant="Variant.Text" Size="ButtonSize.Small" Icon="edit"
				Click="@(args => EditRow(data))" />
				</Template>
				<EditTemplate Context="data">
				@{
				var readingIsForInsertion = KitsComponentsToInsert.Contains(data);
				}
				<RadzenButton Size="ButtonSize.Small" ButtonStyle="ButtonStyle.Success"
				Icon="done" Click="@((args) => SaveRow(data))" aria-label="Save" />
				<RadzenButton Visible=@(!readingIsForInsertion) Size="ButtonSize.Small"
				ButtonStyle="ButtonStyle.Dark" Shade="Shade.Lighter" Icon="close"
				Click="@(args => CancelEdit(data))" />
				<RadzenButton Visible=@(!readingIsForInsertion) Size="ButtonSize.Small" ButtonStyle="ButtonStyle.Danger"
				Icon="delete" Click="@(args => DeleteRow(data))" />
				</EditTemplate>
				</RadzenDataGridColumn>
				</Columns>
				</RadzenDataGrid> *@


				<RadzenTemplateForm Context="ComponentForm" Submit="AddComponent" TItem="KitComponentViewModel" Data="ToAdd" class="w-100">
					<RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.End" class="w-100">
						<RadzenRow class="w-100" Style="flex-grow:1">
							<RadzenColumn Size="6">
								<RadzenStack>
									<RadzenLabel Text="Item Name"></RadzenLabel>
									<RadzenDropDown AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" Placeholder="Select an item" @bind-Value="@ToAdd.StockItemId" Data="@StockItemList" TextProperty="Name" ValueProperty="Id" Name="ItemName" />
									<RadzenRequiredValidator Text="Item is required" Component="ItemName"></RadzenRequiredValidator>
								</RadzenStack>

							</RadzenColumn>
							<RadzenColumn Size="6">
								<RadzenStack>
									<RadzenLabel Text="Quantity"></RadzenLabel>
									<RadzenNumeric @bind-Value="@ToAdd.Quantity" Name="Quantity" Placeholder="00" />
									<RadzenNumericRangeValidator Min="1m" Text="Quantity should be greater than 0." Component="Quantity"></RadzenNumericRangeValidator>
								</RadzenStack>
							</RadzenColumn>
						</RadzenRow>
						<RadzenButton Text="Add" ButtonType="ButtonType.Submit" ButtonStyle="ButtonStyle.Success" />
						<RadzenButton Text="Reset" Click="ResetComponentForm" ButtonType="ButtonType.Button" ButtonStyle="ButtonStyle.Light" />
					</RadzenStack>
					<RadzenStack class="w-100">
						@foreach (var item in KitsComponentList)
						{
							<RadzenStack class="w-100" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center">
								<RadzenFormField Text="Item name">
									<RadzenTextBox Value="@item.ItemName" ReadOnly />
								</RadzenFormField>
								<RadzenFormField Text="Quantity">
									<RadzenTextBox Value="@item.Quantity.ToString()" ReadOnly />
								</RadzenFormField>
								<RadzenButton Icon="close" ButtonStyle="ButtonStyle.Danger" Click="@(() => RemoveComponent(KitsComponentList.IndexOf(item)))" />
							</RadzenStack>
						}
					</RadzenStack>
				</RadzenTemplateForm>
			</RadzenStack>
			<RadzenStack class="mt-3" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.End" Gap="10px">
				<RadzenButton Text="Cancel" Icon="close" ButtonStyle="ButtonStyle.Base" Size="ButtonSize.Small" Click="@(() => _dialogService.Close(false))" />
				<RadzenButton ButtonType="ButtonType.Submit" Text="Save" Icon="done_outline" ButtonStyle="ButtonStyle.Success" Shade="Shade.Light" Size="ButtonSize.Small" />
			</RadzenStack>
		</RadzenStack>

	</RadzenTemplateForm>
</RadzenStack>